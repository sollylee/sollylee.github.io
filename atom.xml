<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LISILE&#39;s Note</title>
  
  
  <link href="/sollylee.github.io/atom.xml" rel="self"/>
  
  <link href="https://sollylee.github.io/"/>
  <updated>2018-01-28T02:15:48.364Z</updated>
  <id>https://sollylee.github.io/</id>
  
  <author>
    <name>Solly Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sublime使用技巧</title>
    <link href="https://sollylee.github.io/2018/01/28/sublime%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https://sollylee.github.io/2018/01/28/sublime使用技巧/</id>
    <published>2018-01-28T01:42:37.000Z</published>
    <updated>2018-01-28T02:15:48.364Z</updated>
    
    <content type="html"><![CDATA[<p>前端工具sublime的使用技巧，从慕课中总结而来</p><a id="more"></a><h2 id="一些插件及与其相关的快捷键的使用："><a href="#一些插件及与其相关的快捷键的使用：" class="headerlink" title="一些插件及与其相关的快捷键的使用："></a>一些插件及与其相关的快捷键的使用：</h2><p>安装Packet：菜单栏View-&gt;Show Console-&gt;粘贴text2或text3的Packet配置信息-&gt;重启软件-&gt;Ct+N（新建文档）-&gt;Ct+Sh+P-&gt;输入pci-&gt;查找要安装的插件</p><h3 id="Emmet插件："><a href="#Emmet插件：" class="headerlink" title="Emmet插件："></a>Emmet插件：</h3><p>安装好Emmet插件后：</p><pre><code>！+Ct+E:迅速生成html的基础元素Ct+P:查找时加 #元素名；找到后，若要在该行下新加一行，可按 Ct+Enter上一行  Ct+Sh+Enterul&gt;.item$*10 ,再按Ct+E，则一次性生成10个&lt;li class=&quot;item(1/2/3/../10)&quot;&gt;&lt;/li&gt; 即 父元素&gt; .（表示有class标签或用 # 表示有id值）类名（id名）$*（子元素出现次数），再Ct+E在文本中写 h2{this is good} 再按Ct+E,则生成 &lt;h2&gt;this is good&lt;/h2&gt;Ct+ 键盘上含 } 的键：文本缩进Ct+Sh+V：粘贴时保持复制时的格式，如缩进等</code></pre><h3 id="insert-callback插件"><a href="#insert-callback插件" class="headerlink" title="insert callback插件"></a>insert callback插件</h3><pre><code>Alt+C：删除多于的符号</code></pre><h3 id="advanNew"><a href="#advanNew" class="headerlink" title="advanNew"></a>advanNew</h3><p>Ctrl+Shift+P打开命令模式，<br>输入”pci”（Package Control:Install Package），<br>在提示框输入”adva”，选”AdvancedNewFile”进行安装。</p><pre><code>安装完成后使用&quot;Ctrl+Alt+N&quot;</code></pre><p>选在屏幕下方出现的输入框中输入”test.html”，创建了一个html文件；</p><p>输入框中输入”public/css/test.css”，<br>则在public目录下的css中创建了一个test.css文件；</p><p>输入框中输入”public/css/sass/test.sass”，<br>则在public目录下的css中创建了一个sass文件夹<br>并在其中创建了一个test.sass文件。</p><h3 id="httpRequester"><a href="#httpRequester" class="headerlink" title="httpRequester"></a>httpRequester</h3><pre><code>Ctrl+Shift+P打开命令模式，输入&quot;pci&quot;（Package Control:Install Package），在提示框输入&quot;http&quot;，选&quot;Http Requester&quot;进行安装。</code></pre><p>安装完成后要使用注解的方式来标记函数需要测试的路由地址</p><p>在Sublime内部，做服务器响应的测试Get请求</p><pre><code>/* GET users listing. */// localhost:3000/users/router.get(&apos;/&apos;, function(req, res) {res.send(&apos;respond with a resource&apos;);});</code></pre><p>注释需要测试的路由地址”// localhost:3000/users/“（localhost为路由地址，3000为端口号）<br>选中”localhost:3000/users/“，<br>使用快捷键”Alt+Ctrl+R”，出现新的页面显示服务器的响应，<br>“200 OK”表示服务器响应正确。</p><p>get请求比较容易测试，可以在浏览器中输入地址；<br>post请求比较难以测试<br>以前测试post请求需要完成一个表单（用html语言写），<br>然后模拟提交，这样不利于开发</p><p>不需要前端form表单的情况下来模拟form提交，先完成post请求<br>在Sublime内部，做服务器响应的测试Post请求</p><pre><code>/* POST localhost:3000/users/Content-type: application/x-www-form-urlencodedPOST_BODY:variable1=avalue&amp;variable2=1234&amp;variable3=anothervalue*/router.post(&apos;/&apos;, function(req, res) {res.send(req.body);});（POST：访问地址是一个post请求，&quot;localhost:3000/users/&quot;是访问的地址，&quot;Content-type...anothervalue&quot;指定是以form表单形式提交）选中&quot;/* */&quot;内的注释，使用快捷键&quot;Alt+Ctrl+R&quot;，出现新的页面显示服务器的响应，&quot;200 OK&quot;表示服务器响应正确</code></pre><h3 id="netauke-Snip"><a href="#netauke-Snip" class="headerlink" title="netauke Snip"></a>netauke Snip</h3><h3 id="sidebar-enhancement"><a href="#sidebar-enhancement" class="headerlink" title="sidebar enhancement"></a>sidebar enhancement</h3><p>右击对应文档，有直接浏览该页的选项</p><h3 id="docblockr"><a href="#docblockr" class="headerlink" title="docblockr"></a>docblockr</h3><p>用于简化注释拼写</p><pre><code>/** +Tab键 ：可有函数的注释格式/** 或 /* + 回车键：其余注释符自动补充输入/*按回车，补充行注释。输入/**按回车，补充多行注释。在写好的函数上方输入/**按tab键，自动补充函数说明格式。Ctrl+/: 行注释;Ctrl+Shift+/: 块注释.</code></pre><h3 id="sublimelinter-jshlint"><a href="#sublimelinter-jshlint" class="headerlink" title="sublimelinter-jshlint"></a>sublimelinter-jshlint</h3><pre><code>用于语法、风格的检验安装jsnode插件 -&gt; 安装sublimelinter-jshlint插件 -&gt;运行cmd，输入 npm install -g jshint -&gt;最后到sulimt软件里检验补充9.html代码对齐插件html beautiful；安装后快捷键ctr + alt + shift + f</code></pre><h3 id="SideBarEnhancements"><a href="#SideBarEnhancements" class="headerlink" title="SideBarEnhancements"></a>SideBarEnhancements</h3><p>ctrl+shift+p —&gt;Install Package —&gt;<br>找到SideBarEnhancements<br>安装SideBarEnhancements</p><p>配置预览快捷键</p><p>Preferences —&gt; Key Bindings - User 将以下代码复制到数组中。</p><pre><code>// chrome{ &quot;keys&quot;: [&quot;f2&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;,&quot;args&quot;: {&quot;paths&quot;: [],&quot;application&quot;: &quot;C:/Program Files (x86)/Google/Chrome/Application/chrome.exe&quot;,&quot;extensions&quot;:&quot;.*&quot;}},// firefox{ &quot;keys&quot;: [&quot;f3&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;,&quot;args&quot;: {&quot;paths&quot;: [],&quot;application&quot;: &quot;D:/Program Files (x86)/Mozilla Firefox/firefox.exe&quot;,&quot;extensions&quot;:&quot;.*&quot;}},// ie{ &quot;keys&quot;: [&quot;f4&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;,&quot;args&quot;: {&quot;paths&quot;: [],&quot;application&quot;: &quot;C:/Program Files/Internet Explorer/iexplore.exe&quot;,&quot;extensions&quot;:&quot;.*&quot;}}</code></pre><p>上面的代码中有两处需要注意的地方，<br>一个是keys表示快捷键，即f2可以启动chrome进行预览。<br>另一个是application，表示浏览器所在的安装路径，<br>只有路径配置正确，才能够正常调用浏览器</p><h3 id="nettus-fetch插件"><a href="#nettus-fetch插件" class="headerlink" title="nettus fetch插件"></a>nettus fetch插件</h3><pre><code>ctrl+shift+p---&gt;输入nettus fetch回车---&gt;ctrl_shift+p---&gt;输入fetch manage来管理配置文件</code></pre><p>使用fetch来下载jquery步骤：</p><pre><code>ctrl+alt+n在某个目录下创建一个jQuery文件---&gt;在该文件中输入ctrl+shift+p---&gt;输入fetch file回车---&gt;jquery回车下载。</code></pre><p>在fetch配置文件中来增加新的类库（如：underscore.js）：<br>步骤如下：</p><pre><code>在该文件中添加&quot;underscore&quot;:&quot;http://github.com/jashkenas/underscore/blob/master/underscore.min.js&quot;和前一个参数以&quot;逗号&quot;来分隔。ctrl+alt+n在某个目录下创建一个underscore文件---&gt;在该文件中输入ctrl+shift+p---&gt;输入fetch file回车---&gt;jquery回车下载。</code></pre><p>到github下载underscore.js文件<br>github上的underscore文件地址：</p><pre><code>https://raw.githubusercontent.com/jashkenas/underscore/master/underscore-min.js</code></pre><h2 id="快捷键的使用"><a href="#快捷键的使用" class="headerlink" title="快捷键的使用"></a>快捷键的使用</h2><p>1、Ctrl+H：查找替换<br>2、Ctrl+D：选择游标所在单词，连续Ctrl+D实现多行选择<br>（选择与第一次选择相同的单词）<br>3、Ctrl+K Ctrl+D：跳过当前选择，选择下一个<br>4、Ctrl+shift+D：复制游标所在行<br>5、Ctrl+F3：选择所以与游标所在单词相同的单词<br>6、全选：先Ctrl+A全选然后Ctrl+shift+L产生游标<br>7、按住shift，右键，拖动，产生多行游标<br>8、Ctrl+P 的作用是：搜索项目中的文件 go to anything<br>9、Ctrl+Shift+P 快捷键的作用是：打开命令模式<br>10、Ctrl+Shift+K 的快捷键是：删除整行<br>11、ctrl+shift+v 保持缩进粘贴<br>12、Ctrl+] 增加缩进 [ 减小缩进。<br>13、Alt+. 闭合标签<br>14、Alt+&gt; 闭合标签<br>15、Ctrl+? 注释一行</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端工具sublime的使用技巧，从慕课中总结而来&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端学习" scheme="https://sollylee.github.io/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://sollylee.github.io/2018/01/27/hello-world/"/>
    <id>https://sollylee.github.io/2018/01/27/hello-world/</id>
    <published>2018-01-27T11:56:45.915Z</published>
    <updated>2018-01-28T01:35:53.986Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
