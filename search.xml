<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[sublime使用技巧]]></title>
    <url>%2Fsollylee.github.io%2F2018%2F01%2F28%2Fsublime%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[前端工具sublime的使用技巧，从慕课中总结而来 一些插件及与其相关的快捷键的使用：安装Packet：菜单栏View-&gt;Show Console-&gt;粘贴text2或text3的Packet配置信息-&gt;重启软件-&gt;Ct+N（新建文档）-&gt;Ct+Sh+P-&gt;输入pci-&gt;查找要安装的插件 Emmet插件：安装好Emmet插件后： ！+Ct+E:迅速生成html的基础元素 Ct+P:查找时加 #元素名；找到后，若要在该行下新加一行，可按 Ct+Enter 上一行 Ct+Sh+Enter ul&gt;.item$*10 ,再按Ct+E， 则一次性生成10个&lt;li class=&quot;item(1/2/3/../10)&quot;&gt;&lt;/li&gt; 即 父元素&gt; .（表示有class标签或用 # 表示有id值） 类名（id名）$*（子元素出现次数），再Ct+E 在文本中写 h2{this is good} 再按Ct+E, 则生成 &lt;h2&gt;this is good&lt;/h2&gt; Ct+ 键盘上含 } 的键：文本缩进 Ct+Sh+V：粘贴时保持复制时的格式，如缩进等 insert callback插件Alt+C：删除多于的符号 advanNewCtrl+Shift+P打开命令模式，输入”pci”（Package Control:Install Package），在提示框输入”adva”，选”AdvancedNewFile”进行安装。 安装完成后使用&quot;Ctrl+Alt+N&quot; 选在屏幕下方出现的输入框中输入”test.html”，创建了一个html文件； 输入框中输入”public/css/test.css”，则在public目录下的css中创建了一个test.css文件； 输入框中输入”public/css/sass/test.sass”，则在public目录下的css中创建了一个sass文件夹并在其中创建了一个test.sass文件。 httpRequesterCtrl+Shift+P打开命令模式， 输入&quot;pci&quot;（Package Control:Install Package）， 在提示框输入&quot;http&quot;，选&quot;Http Requester&quot;进行安装。 安装完成后要使用注解的方式来标记函数需要测试的路由地址 在Sublime内部，做服务器响应的测试Get请求 /* GET users listing. */ // localhost:3000/users/ router.get(&apos;/&apos;, function(req, res) { res.send(&apos;respond with a resource&apos;); }); 注释需要测试的路由地址”// localhost:3000/users/“（localhost为路由地址，3000为端口号）选中”localhost:3000/users/“，使用快捷键”Alt+Ctrl+R”，出现新的页面显示服务器的响应，“200 OK”表示服务器响应正确。 get请求比较容易测试，可以在浏览器中输入地址；post请求比较难以测试以前测试post请求需要完成一个表单（用html语言写），然后模拟提交，这样不利于开发 不需要前端form表单的情况下来模拟form提交，先完成post请求在Sublime内部，做服务器响应的测试Post请求 /* POST localhost:3000/users/ Content-type: application/x-www-form-urlencoded POST_BODY: variable1=avalue&amp;variable2=1234&amp;variable3=anothervalue */ router.post(&apos;/&apos;, function(req, res) { res.send(req.body);}); （POST：访问地址是一个post请求， &quot;localhost:3000/users/&quot;是访问的地址， &quot;Content-type...anothervalue&quot;指定是以form表单形式提交） 选中&quot;/* */&quot;内的注释， 使用快捷键&quot;Alt+Ctrl+R&quot;，出现新的页面显示服务器的响应， &quot;200 OK&quot;表示服务器响应正确 netauke Snipsidebar enhancement右击对应文档，有直接浏览该页的选项 docblockr用于简化注释拼写 /** +Tab键 ：可有函数的注释格式 /** 或 /* + 回车键：其余注释符自动补充 输入/*按回车，补充行注释。 输入/**按回车，补充多行注释。 在写好的函数上方输入/**按tab键，自动补充函数说明格式。 Ctrl+/: 行注释; Ctrl+Shift+/: 块注释. sublimelinter-jshlint用于语法、风格的检验 安装jsnode插件 -&gt; 安装sublimelinter-jshlint插件 -&gt;运行cmd， 输入 npm install -g jshint -&gt;最后到sulimt软件里检验 补充9.html代码对齐插件html beautiful； 安装后快捷键ctr + alt + shift + f SideBarEnhancementsctrl+shift+p —&gt;Install Package —&gt;找到SideBarEnhancements安装SideBarEnhancements 配置预览快捷键 Preferences —&gt; Key Bindings - User 将以下代码复制到数组中。 // chrome { &quot;keys&quot;: [&quot;f2&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;, &quot;args&quot;: { &quot;paths&quot;: [], &quot;application&quot;: &quot;C:/Program Files (x86)/Google/Chrome/Application/chrome.exe&quot;, &quot;extensions&quot;:&quot;.*&quot; } }, // firefox { &quot;keys&quot;: [&quot;f3&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;, &quot;args&quot;: { &quot;paths&quot;: [], &quot;application&quot;: &quot;D:/Program Files (x86)/Mozilla Firefox/firefox.exe&quot;, &quot;extensions&quot;:&quot;.*&quot; } }, // ie { &quot;keys&quot;: [&quot;f4&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;, &quot;args&quot;: { &quot;paths&quot;: [], &quot;application&quot;: &quot;C:/Program Files/Internet Explorer/iexplore.exe&quot;, &quot;extensions&quot;:&quot;.*&quot; } } 上面的代码中有两处需要注意的地方，一个是keys表示快捷键，即f2可以启动chrome进行预览。另一个是application，表示浏览器所在的安装路径，只有路径配置正确，才能够正常调用浏览器 nettus fetch插件ctrl+shift+p---&gt;输入nettus fetch回车 ---&gt;ctrl_shift+p---&gt;输入fetch manage来管理配置文件 使用fetch来下载jquery步骤： ctrl+alt+n在某个目录下创建一个jQuery文件---&gt;在该文件中输入ctrl+shift+p---&gt; 输入fetch file回车---&gt;jquery回车下载。 在fetch配置文件中来增加新的类库（如：underscore.js）：步骤如下： 在该文件中添加&quot;underscore&quot;: &quot;http://github.com/jashkenas/underscore/blob/master/underscore.min.js&quot;和前一个参数以&quot;逗号&quot;来分隔。 ctrl+alt+n在某个目录下创建一个underscore文件---&gt;在该文件中输入ctrl+shift+p---&gt; 输入fetch file回车---&gt;jquery回车下载。 到github下载underscore.js文件github上的underscore文件地址： https://raw.githubusercontent.com/ jashkenas/underscore/master/underscore-min.js 快捷键的使用1、Ctrl+H：查找替换2、Ctrl+D：选择游标所在单词，连续Ctrl+D实现多行选择（选择与第一次选择相同的单词）3、Ctrl+K Ctrl+D：跳过当前选择，选择下一个4、Ctrl+shift+D：复制游标所在行5、Ctrl+F3：选择所以与游标所在单词相同的单词6、全选：先Ctrl+A全选然后Ctrl+shift+L产生游标7、按住shift，右键，拖动，产生多行游标8、Ctrl+P 的作用是：搜索项目中的文件 go to anything9、Ctrl+Shift+P 快捷键的作用是：打开命令模式10、Ctrl+Shift+K 的快捷键是：删除整行11、ctrl+shift+v 保持缩进粘贴12、Ctrl+] 增加缩进 [ 减小缩进。13、Alt+. 闭合标签14、Alt+&gt; 闭合标签15、Ctrl+? 注释一行]]></content>
      <tags>
        <tag>前端学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fsollylee.github.io%2F2018%2F01%2F27%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
